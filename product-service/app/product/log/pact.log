# Logfile created on 2023-06-18 17:07:23 +0300 by logger.rb/66358
I, [2023-06-18T18:06:35.678591 #77219]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:06:35.683113 #77219]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:06:35.683136 #77219] DEBUG -- : body :
I, [2023-06-18T18:06:35.692200 #77219]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:06:35 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:06:35.692240 #77219] DEBUG -- : body: 
I, [2023-06-18T18:06:35.696054 #77219]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:06:35.702505 #77219]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:06:35.702540 #77219] DEBUG -- : body :
I, [2023-06-18T18:06:35.703883 #77219]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:06:35 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:06:35.703903 #77219] DEBUG -- : body: 
I, [2023-06-18T18:06:35.704607 #77219]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:06:35.708301 #77219]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:06:35.708318 #77219] DEBUG -- : body :
I, [2023-06-18T18:06:35.709315 #77219]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:06:35 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:06:35.709332 #77219] DEBUG -- : body: 
I, [2023-06-18T18:06:35.709834 #77219]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:06:35.713375 #77219]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:06:35.713397 #77219] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:06:35.714522 #77219]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:06:35 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:06:35.714543 #77219] DEBUG -- : body: 
I, [2023-06-18T18:06:35.715049 #77219]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:06:35.718598 #77219]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:06:35.718629 #77219] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:06:35.719706 #77219]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:06:35 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:06:35.719719 #77219] DEBUG -- : body: 
I, [2023-06-18T18:06:35.720201 #77219]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /products/bulk returns a response which has status code 200'
I, [2023-06-18T18:06:35.723649 #77219]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:06:35.723668 #77219] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:06:35.724888 #77219]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:06:35 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:06:35.724907 #77219] DEBUG -- : body: 
I, [2023-06-18T18:18:42.900861 #77905]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:18:42.905479 #77905]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:18:42.905515 #77905] DEBUG -- : body :
I, [2023-06-18T18:18:42.914106 #77905]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:18:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:18:42.914145 #77905] DEBUG -- : body: 
I, [2023-06-18T18:18:42.917600 #77905]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:18:42.923221 #77905]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:18:42.923250 #77905] DEBUG -- : body :
I, [2023-06-18T18:18:42.924578 #77905]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:18:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:18:42.924594 #77905] DEBUG -- : body: 
I, [2023-06-18T18:18:42.925260 #77905]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:18:42.928895 #77905]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:18:42.928916 #77905] DEBUG -- : body :
I, [2023-06-18T18:18:42.930098 #77905]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:18:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:18:42.930114 #77905] DEBUG -- : body: 
I, [2023-06-18T18:18:42.930629 #77905]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:18:42.934262 #77905]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:18:42.934282 #77905] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:18:42.935542 #77905]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:18:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:18:42.935555 #77905] DEBUG -- : body: 
I, [2023-06-18T18:18:42.936036 #77905]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:18:42.939515 #77905]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:18:42.939540 #77905] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:18:42.941097 #77905]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:18:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:18:42.941143 #77905] DEBUG -- : body: 
I, [2023-06-18T18:18:42.942009 #77905]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /products/bulk returns a response which has status code 200'
I, [2023-06-18T18:18:42.945765 #77905]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:18:42.945790 #77905] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:18:42.947067 #77905]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:18:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:18:42.947083 #77905] DEBUG -- : body: 
I, [2023-06-18T18:19:42.233412 #78002]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:19:42.238112 #78002]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:19:42.238137 #78002] DEBUG -- : body :
I, [2023-06-18T18:19:42.246624 #78002]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:19:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:19:42.246664 #78002] DEBUG -- : body: 
I, [2023-06-18T18:19:42.250266 #78002]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:19:42.256333 #78002]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:19:42.256363 #78002] DEBUG -- : body :
I, [2023-06-18T18:19:42.257675 #78002]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:19:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:19:42.257694 #78002] DEBUG -- : body: 
I, [2023-06-18T18:19:42.258338 #78002]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:19:42.261816 #78002]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:19:42.261833 #78002] DEBUG -- : body :
I, [2023-06-18T18:19:42.262950 #78002]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:19:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:19:42.262964 #78002] DEBUG -- : body: 
I, [2023-06-18T18:19:42.263471 #78002]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:19:42.267175 #78002]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:19:42.267199 #78002] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:19:42.268605 #78002]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:19:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:19:42.268618 #78002] DEBUG -- : body: 
I, [2023-06-18T18:19:42.269100 #78002]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:19:42.272572 #78002]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:19:42.272594 #78002] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:19:42.273714 #78002]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:19:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:19:42.273729 #78002] DEBUG -- : body: 
I, [2023-06-18T18:19:42.274208 #78002]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /products/bulk returns a response which has status code 200'
I, [2023-06-18T18:19:42.277650 #78002]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:19:42.277672 #78002] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:19:42.278703 #78002]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:19:42 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:19:42.278716 #78002] DEBUG -- : body: 
I, [2023-06-18T18:24:45.999450 #78335]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:24:46.003390 #78335]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:24:46.003414 #78335] DEBUG -- : body :
I, [2023-06-18T18:24:46.010961 #78335]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:24:46 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:24:46.010996 #78335] DEBUG -- : body: 
I, [2023-06-18T18:24:46.012995 #78335]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:24:46.016987 #78335]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:24:46.017006 #78335] DEBUG -- : body :
I, [2023-06-18T18:24:46.018070 #78335]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:24:46 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:24:46.018091 #78335] DEBUG -- : body: 
I, [2023-06-18T18:24:46.018690 #78335]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:24:46.022403 #78335]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:24:46.022422 #78335] DEBUG -- : body :
I, [2023-06-18T18:24:46.024531 #78335]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:24:46 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:24:46.024558 #78335] DEBUG -- : body: 
I, [2023-06-18T18:24:46.025249 #78335]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:24:46.028879 #78335]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:24:46.028902 #78335] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:24:46.030011 #78335]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:24:46 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:24:46.030032 #78335] DEBUG -- : body: 
I, [2023-06-18T18:24:46.030584 #78335]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:24:46.034142 #78335]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:24:46.034162 #78335] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:24:46.035244 #78335]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:24:46 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:24:46.035262 #78335] DEBUG -- : body: 
I, [2023-06-18T18:24:46.035873 #78335]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /products/bulk returns a response which has status code 200'
I, [2023-06-18T18:24:46.039679 #78335]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:24:46.039702 #78335] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:24:46.040861 #78335]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:24:46 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:24:46.040878 #78335] DEBUG -- : body: 
I, [2023-06-18T18:27:06.970620 #78539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:27:06.974661 #78539]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:27:06.974689 #78539] DEBUG -- : body :
I, [2023-06-18T18:27:06.982480 #78539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:27:06 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:27:06.982522 #78539] DEBUG -- : body: 
I, [2023-06-18T18:27:06.984467 #78539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:27:06.988333 #78539]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:27:06.988351 #78539] DEBUG -- : body :
I, [2023-06-18T18:27:06.990283 #78539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:27:06 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:27:06.990311 #78539] DEBUG -- : body: 
I, [2023-06-18T18:27:06.991023 #78539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:27:06.994631 #78539]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:27:06.994660 #78539] DEBUG -- : body :
I, [2023-06-18T18:27:06.995703 #78539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:27:06 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:27:06.995720 #78539] DEBUG -- : body: 
I, [2023-06-18T18:27:06.996262 #78539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:27:06.999690 #78539]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:27:06.999712 #78539] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:27:07.001006 #78539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:27:07 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:27:07.001022 #78539] DEBUG -- : body: 
I, [2023-06-18T18:27:07.001506 #78539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:27:07.004933 #78539]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:27:07.004953 #78539] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:27:07.006060 #78539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:27:07 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:27:07.006075 #78539] DEBUG -- : body: 
I, [2023-06-18T18:27:07.006560 #78539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /products/bulk returns a response which has status code 200'
I, [2023-06-18T18:27:07.010005 #78539]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:27:07.010033 #78539] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:27:07.011299 #78539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:27:07 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:27:07.011314 #78539] DEBUG -- : body: 
I, [2023-06-18T18:36:28.753962 #79539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:36:28.758703 #79539]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:36:28.758737 #79539] DEBUG -- : body :
I, [2023-06-18T18:36:28.768037 #79539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:36:28 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:36:28.768092 #79539] DEBUG -- : body: 
I, [2023-06-18T18:36:28.772091 #79539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:36:28.778599 #79539]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:36:28.778628 #79539] DEBUG -- : body :
I, [2023-06-18T18:36:28.779960 #79539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:36:28 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:36:28.779978 #79539] DEBUG -- : body: 
I, [2023-06-18T18:36:28.780647 #79539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:36:28.784281 #79539]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:36:28.784296 #79539] DEBUG -- : body :
I, [2023-06-18T18:36:28.785487 #79539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:36:28 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:36:28.785506 #79539] DEBUG -- : body: 
I, [2023-06-18T18:36:28.786017 #79539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:36:28.789599 #79539]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:36:28.789621 #79539] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:36:28.790704 #79539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:36:28 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:36:28.790719 #79539] DEBUG -- : body: 
I, [2023-06-18T18:36:28.791234 #79539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:36:28.794851 #79539]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:36:28.794871 #79539] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:36:28.795951 #79539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:36:28 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:36:28.795964 #79539] DEBUG -- : body: 
I, [2023-06-18T18:36:28.796449 #79539]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /products/bulk returns a response which has status code 200'
I, [2023-06-18T18:36:28.799996 #79539]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:36:28.800024 #79539] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:36:28.801337 #79539]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:36:28 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:36:28.801353 #79539] DEBUG -- : body: 
I, [2023-06-18T18:37:54.362966 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:37:54.366917 #79657]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:37:54.366941 #79657] DEBUG -- : body :
I, [2023-06-18T18:37:54.374176 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.374241 #79657] DEBUG -- : body: 
I, [2023-06-18T18:37:54.376432 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:37:54.380425 #79657]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:37:54.380446 #79657] DEBUG -- : body :
I, [2023-06-18T18:37:54.381533 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.381557 #79657] DEBUG -- : body: 
I, [2023-06-18T18:37:54.382200 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:37:54.385806 #79657]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:37:54.385824 #79657] DEBUG -- : body :
I, [2023-06-18T18:37:54.386773 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.386790 #79657] DEBUG -- : body: 
I, [2023-06-18T18:37:54.387291 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:37:54.390864 #79657]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:37:54.390889 #79657] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:37:54.392124 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.392150 #79657] DEBUG -- : body: 
I, [2023-06-18T18:37:54.392653 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:37:54.396347 #79657]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:37:54.396368 #79657] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:37:54.397491 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.397506 #79657] DEBUG -- : body: 
I, [2023-06-18T18:37:54.398008 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /products/bulk returns a response which has status code 200'
I, [2023-06-18T18:37:54.401458 #79657]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:37:54.401480 #79657] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:37:54.402571 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.402586 #79657] DEBUG -- : body: 
I, [2023-06-18T18:37:54.809877 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:37:54.813676 #79657]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:37:54.813695 #79657] DEBUG -- : body :
I, [2023-06-18T18:37:54.814824 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.814839 #79657] DEBUG -- : body: 
I, [2023-06-18T18:37:54.815412 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:37:54.819018 #79657]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:37:54.819040 #79657] DEBUG -- : body :
I, [2023-06-18T18:37:54.820182 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.820197 #79657] DEBUG -- : body: 
I, [2023-06-18T18:37:54.820751 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:37:54.826809 #79657]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:37:54.826829 #79657] DEBUG -- : body :
I, [2023-06-18T18:37:54.827908 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.827922 #79657] DEBUG -- : body: 
I, [2023-06-18T18:37:54.828427 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:37:54.832214 #79657]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:37:54.832241 #79657] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:37:54.833488 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.833504 #79657] DEBUG -- : body: 
I, [2023-06-18T18:37:54.834055 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:37:54.838173 #79657]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:37:54.838203 #79657] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:37:54.839428 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.839449 #79657] DEBUG -- : body: 
I, [2023-06-18T18:37:54.839995 #79657]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /products/bulk returns a response which has status code 200'
I, [2023-06-18T18:37:54.845708 #79657]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:37:54.845745 #79657] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:37:54.847350 #79657]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:37:54 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:37:54.847380 #79657] DEBUG -- : body: 
I, [2023-06-18T18:47:27.309070 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:47:27.314001 #80583]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:47:27.314040 #80583] DEBUG -- : body :
I, [2023-06-18T18:47:27.323267 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.323312 #80583] DEBUG -- : body: 
I, [2023-06-18T18:47:27.327101 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:47:27.333041 #80583]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:47:27.333072 #80583] DEBUG -- : body :
I, [2023-06-18T18:47:27.334460 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.334475 #80583] DEBUG -- : body: 
I, [2023-06-18T18:47:27.335111 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:47:27.338914 #80583]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:47:27.338933 #80583] DEBUG -- : body :
I, [2023-06-18T18:47:27.339951 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.339966 #80583] DEBUG -- : body: 
I, [2023-06-18T18:47:27.340481 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:47:27.344133 #80583]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:47:27.344157 #80583] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:47:27.345298 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.345312 #80583] DEBUG -- : body: 
I, [2023-06-18T18:47:27.345824 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:47:27.349326 #80583]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:47:27.349347 #80583] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:47:27.350533 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.350565 #80583] DEBUG -- : body: 
I, [2023-06-18T18:47:27.351077 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /products/bulk returns a response which has status code 200'
I, [2023-06-18T18:47:27.354571 #80583]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:47:27.354595 #80583] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:47:27.355713 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.355730 #80583] DEBUG -- : body: 
I, [2023-06-18T18:47:27.770227 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:47:27.774034 #80583]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:47:27.774053 #80583] DEBUG -- : body :
I, [2023-06-18T18:47:27.775241 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.775262 #80583] DEBUG -- : body: 
I, [2023-06-18T18:47:27.775926 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:47:27.782590 #80583]  INFO -- : Sending GET request to path: "/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:47:27.782619 #80583] DEBUG -- : body :
I, [2023-06-18T18:47:27.783855 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.783881 #80583] DEBUG -- : body: 
I, [2023-06-18T18:47:27.784630 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:47:27.788703 #80583]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:47:27.788740 #80583] DEBUG -- : body :
I, [2023-06-18T18:47:27.790239 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.790255 #80583] DEBUG -- : body: 
I, [2023-06-18T18:47:27.790851 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:47:27.796252 #80583]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:47:27.796291 #80583] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:47:27.797565 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.797586 #80583] DEBUG -- : body: 
I, [2023-06-18T18:47:27.798207 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /products/bulk returns a response which has status code 400'
I, [2023-06-18T18:47:27.803718 #80583]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:47:27.803764 #80583] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:47:27.805596 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.805622 #80583] DEBUG -- : body: 
I, [2023-06-18T18:47:27.806539 #80583]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /products/bulk returns a response which has status code 200'
I, [2023-06-18T18:47:27.812852 #80583]  INFO -- : Sending GET request to path: "/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:47:27.812883 #80583] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:47:27.814357 #80583]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:47:27 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:47:27.814378 #80583] DEBUG -- : body: 
I, [2023-06-18T18:53:43.036771 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:53:43.041686 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:53:43.041726 #81134] DEBUG -- : body :
I, [2023-06-18T18:53:43.050436 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.050488 #81134] DEBUG -- : body: 
I, [2023-06-18T18:53:43.054203 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:53:43.060181 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:53:43.060223 #81134] DEBUG -- : body :
I, [2023-06-18T18:53:43.061564 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.061591 #81134] DEBUG -- : body: 
I, [2023-06-18T18:53:43.062252 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:53:43.066036 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:53:43.066057 #81134] DEBUG -- : body :
I, [2023-06-18T18:53:43.067148 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.067163 #81134] DEBUG -- : body: 
I, [2023-06-18T18:53:43.067703 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:53:43.071219 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:53:43.071243 #81134] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:53:43.072341 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.072356 #81134] DEBUG -- : body: 
I, [2023-06-18T18:53:43.072843 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:53:43.076272 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:53:43.076292 #81134] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:53:43.077526 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.077541 #81134] DEBUG -- : body: 
I, [2023-06-18T18:53:43.078056 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T18:53:43.081547 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:53:43.081578 #81134] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:53:43.082765 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.082780 #81134] DEBUG -- : body: 
I, [2023-06-18T18:53:43.508457 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:53:43.512267 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:53:43.512289 #81134] DEBUG -- : body :
I, [2023-06-18T18:53:43.513505 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.513521 #81134] DEBUG -- : body: 
I, [2023-06-18T18:53:43.514168 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:53:43.517598 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:53:43.517621 #81134] DEBUG -- : body :
I, [2023-06-18T18:53:43.518851 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.518874 #81134] DEBUG -- : body: 
I, [2023-06-18T18:53:43.519504 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:53:43.523200 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:53:43.523219 #81134] DEBUG -- : body :
I, [2023-06-18T18:53:43.524347 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.524361 #81134] DEBUG -- : body: 
I, [2023-06-18T18:53:43.524904 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:53:43.530743 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:53:43.530775 #81134] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:53:43.531989 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.532008 #81134] DEBUG -- : body: 
I, [2023-06-18T18:53:43.532565 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:53:43.536869 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:53:43.536904 #81134] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:53:43.538020 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.538039 #81134] DEBUG -- : body: 
I, [2023-06-18T18:53:43.538612 #81134]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T18:53:43.543463 #81134]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:53:43.543487 #81134] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:53:43.544737 #81134]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:53:43 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:53:43.544757 #81134] DEBUG -- : body: 
I, [2023-06-18T18:55:31.821806 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:55:31.826588 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:55:31.826612 #81264] DEBUG -- : body :
I, [2023-06-18T18:55:31.834228 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:31 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:31.834275 #81264] DEBUG -- : body: 
I, [2023-06-18T18:55:31.836254 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:55:31.840059 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:55:31.840080 #81264] DEBUG -- : body :
I, [2023-06-18T18:55:31.841299 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:31 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:31.841324 #81264] DEBUG -- : body: 
I, [2023-06-18T18:55:31.841948 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:55:31.845710 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:55:31.845730 #81264] DEBUG -- : body :
I, [2023-06-18T18:55:31.846881 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:31 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:31.846897 #81264] DEBUG -- : body: 
I, [2023-06-18T18:55:31.847407 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:55:31.851547 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:55:31.851595 #81264] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:55:31.853206 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:31 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:31.853239 #81264] DEBUG -- : body: 
I, [2023-06-18T18:55:31.853995 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:55:31.857731 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:55:31.857764 #81264] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:55:31.859013 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:31 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:31.859045 #81264] DEBUG -- : body: 
I, [2023-06-18T18:55:31.859684 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T18:55:31.863385 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:55:31.863427 #81264] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:55:31.864731 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:31 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:31.864753 #81264] DEBUG -- : body: 
I, [2023-06-18T18:55:32.292095 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:55:32.295732 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:55:32.295752 #81264] DEBUG -- : body :
I, [2023-06-18T18:55:32.296957 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:32 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:32.296979 #81264] DEBUG -- : body: 
I, [2023-06-18T18:55:32.297573 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:55:32.301111 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:55:32.301127 #81264] DEBUG -- : body :
I, [2023-06-18T18:55:32.302121 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:32 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:32.302142 #81264] DEBUG -- : body: 
I, [2023-06-18T18:55:32.302692 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:55:32.308482 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:55:32.308512 #81264] DEBUG -- : body :
I, [2023-06-18T18:55:32.309959 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:32 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:32.309990 #81264] DEBUG -- : body: 
I, [2023-06-18T18:55:32.310933 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:55:32.316956 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:55:32.316983 #81264] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:55:32.318133 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:32 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:32.318152 #81264] DEBUG -- : body: 
I, [2023-06-18T18:55:32.318722 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:55:32.322556 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:55:32.322578 #81264] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:55:32.323820 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:32 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:32.323838 #81264] DEBUG -- : body: 
I, [2023-06-18T18:55:32.324401 #81264]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T18:55:32.328837 #81264]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:55:32.328862 #81264] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:55:32.330019 #81264]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:55:32 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:55:32.330035 #81264] DEBUG -- : body: 
I, [2023-06-18T18:59:09.110097 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:59:09.114733 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:59:09.114764 #81492] DEBUG -- : body :
I, [2023-06-18T18:59:09.124147 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.124186 #81492] DEBUG -- : body: 
I, [2023-06-18T18:59:09.128225 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:59:09.134102 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:59:09.134147 #81492] DEBUG -- : body :
I, [2023-06-18T18:59:09.135787 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.135839 #81492] DEBUG -- : body: 
I, [2023-06-18T18:59:09.136787 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:59:09.141599 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:59:09.141649 #81492] DEBUG -- : body :
I, [2023-06-18T18:59:09.142891 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.142911 #81492] DEBUG -- : body: 
I, [2023-06-18T18:59:09.143588 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:59:09.147180 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:59:09.147208 #81492] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:59:09.148362 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.148381 #81492] DEBUG -- : body: 
I, [2023-06-18T18:59:09.148896 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:59:09.152794 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:59:09.152822 #81492] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:59:09.153965 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.153982 #81492] DEBUG -- : body: 
I, [2023-06-18T18:59:09.154484 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T18:59:09.157802 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:59:09.157824 #81492] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:59:09.158927 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.158943 #81492] DEBUG -- : body: 
I, [2023-06-18T18:59:09.573677 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T18:59:09.577489 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:59:09.577513 #81492] DEBUG -- : body :
I, [2023-06-18T18:59:09.578834 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.578860 #81492] DEBUG -- : body: 
I, [2023-06-18T18:59:09.579698 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T18:59:09.583521 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T18:59:09.583550 #81492] DEBUG -- : body :
I, [2023-06-18T18:59:09.584756 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.584781 #81492] DEBUG -- : body: 
I, [2023-06-18T18:59:09.585573 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:59:09.589275 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T18:59:09.589300 #81492] DEBUG -- : body :
I, [2023-06-18T18:59:09.590401 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.590420 #81492] DEBUG -- : body: 
I, [2023-06-18T18:59:09.590974 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:59:09.597300 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:59:09.597339 #81492] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:59:09.598589 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.598607 #81492] DEBUG -- : body: 
I, [2023-06-18T18:59:09.599223 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T18:59:09.603256 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T18:59:09.603282 #81492] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:59:09.604752 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.604786 #81492] DEBUG -- : body: 
I, [2023-06-18T18:59:09.605423 #81492]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T18:59:09.610521 #81492]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T18:59:09.610551 #81492] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T18:59:09.612151 #81492]  INFO -- : Received response with status: 502, headers: {"Date"=>"Sun, 18 Jun 2023 15:59:09 GMT", "Content-Length"=>"0"}, see debug logs for body
D, [2023-06-18T18:59:09.612181 #81492] DEBUG -- : body: 
I, [2023-06-18T19:11:21.856189 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:11:21.860835 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:11:21.860875 #82246] DEBUG -- : body :
I, [2023-06-18T19:11:21.873526 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:21 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:21.873591 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:11:21.877554 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T19:11:21.883943 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T19:11:21.883998 #82246] DEBUG -- : body :
I, [2023-06-18T19:11:21.889067 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:21 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:21.889120 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:11:21.889866 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:11:21.893814 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T19:11:21.893855 #82246] DEBUG -- : body :
I, [2023-06-18T19:11:21.898407 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:21 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:21.898458 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:11:21.899114 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:11:21.902831 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:11:21.902863 #82246] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:11:21.907626 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:21 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:21.907666 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:11:21.908329 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:11:21.911819 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:11:21.911843 #82246] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:11:21.915503 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:21 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:21.915542 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:11:21.916118 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T19:11:21.919538 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T19:11:21.919561 #82246] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:11:21.923703 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:21 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:21.923745 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:11:22.355320 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:11:22.359142 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:11:22.359168 #82246] DEBUG -- : body :
I, [2023-06-18T19:11:22.363934 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:22 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:22.363986 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:11:22.364684 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T19:11:22.368295 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T19:11:22.368316 #82246] DEBUG -- : body :
I, [2023-06-18T19:11:22.372890 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:22 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:22.372938 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:11:22.373680 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:11:22.377707 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T19:11:22.377727 #82246] DEBUG -- : body :
I, [2023-06-18T19:11:22.382154 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:22 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:22.382264 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:11:22.383000 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:11:22.386661 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:11:22.386692 #82246] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:11:22.390937 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:22 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:22.390976 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:11:22.391641 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:11:22.395846 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:11:22.395879 #82246] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:11:22.400275 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:22 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:22.400315 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:11:22.400980 #82246]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T19:11:22.404726 #82246]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T19:11:22.404755 #82246] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:11:22.410140 #82246]  INFO -- : Received response with status: 403, headers: {"Content-Length"=>"9", "Content-Type"=>"text/plain", "Date"=>"Sun, 18 Jun 2023 16:11:22 GMT", "Server"=>"nginx/1.25.1"}, see debug logs for body
D, [2023-06-18T19:11:22.410192 #82246] DEBUG -- : body: Forbidden
I, [2023-06-18T19:13:37.235934 #82409]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:13:37.240369 #82409]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:13:37.240396 #82409] DEBUG -- : body :
I, [2023-06-18T19:16:50.457198 #82610]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:16:50.461835 #82610]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:16:50.461866 #82610] DEBUG -- : body :
I, [2023-06-18T19:21:29.363386 #83074]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:21:29.368154 #83074]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:21:29.368200 #83074] DEBUG -- : body :
I, [2023-06-18T19:25:53.203037 #83365]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:25:53.207557 #83365]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:25:53.207592 #83365] DEBUG -- : body :
I, [2023-06-18T19:27:32.567797 #83572]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:27:32.571818 #83572]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:27:32.571844 #83572] DEBUG -- : body :
I, [2023-06-18T19:28:34.348550 #83668]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:28:34.352452 #83668]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:28:34.352478 #83668] DEBUG -- : body :
I, [2023-06-18T19:30:21.544129 #83807]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:30:21.544377 #83807]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:30:21.544392 #83807] DEBUG -- : body :
I, [2023-06-18T19:32:13.899342 #83942]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:32:13.904409 #83942]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:32:13.904471 #83942] DEBUG -- : body :
I, [2023-06-18T19:33:23.855309 #84034]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:33:23.859596 #84034]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:33:23.859627 #84034] DEBUG -- : body :
I, [2023-06-18T19:44:53.022908 #84679]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:44:53.027070 #84679]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:44:53.027094 #84679] DEBUG -- : body :
I, [2023-06-18T19:45:10.613026 #84728]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:45:10.617127 #84728]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:45:10.617153 #84728] DEBUG -- : body :
I, [2023-06-18T19:46:55.959172 #84865]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:46:55.963251 #84865]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:46:55.963293 #84865] DEBUG -- : body :
I, [2023-06-18T19:48:12.985775 #84966]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:48:12.991262 #84966]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:48:12.991301 #84966] DEBUG -- : body :
I, [2023-06-18T19:48:43.538195 #85033]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:48:43.543305 #85033]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:48:43.543343 #85033] DEBUG -- : body :
I, [2023-06-18T19:48:58.317193 #85077]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:48:58.321194 #85077]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:48:58.321241 #85077] DEBUG -- : body :
I, [2023-06-18T19:49:39.230006 #85152]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:49:39.233869 #85152]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:49:39.233894 #85152] DEBUG -- : body :
I, [2023-06-18T19:51:37.428243 #85300]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:51:37.432787 #85300]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:51:37.432823 #85300] DEBUG -- : body :
I, [2023-06-18T19:52:17.591894 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:52:17.597732 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:52:17.597830 #85374] DEBUG -- : body :
I, [2023-06-18T19:52:17.607796 #85374]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:17.607850 #85374] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T19:52:17.609398 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T19:52:17.613723 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T19:52:17.613749 #85374] DEBUG -- : body :
I, [2023-06-18T19:52:17.618263 #85374]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"234", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:17.618300 #85374] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Lina Carroll","code":"aut","color":"Peru","created_at":"0001-01-01T00:00:00Z","updated_at":"0001-01-01T00:00:00Z","price":0,"image_url":"https://picsum.photos/200/200","type":"bag"}
I, [2023-06-18T19:52:17.620174 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:52:17.623928 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T19:52:17.623952 #85374] DEBUG -- : body :
I, [2023-06-18T19:52:17.625155 #85374]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:17.625172 #85374] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T19:52:17.625661 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:52:17.629265 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:52:17.629294 #85374] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:52:17.630629 #85374]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:17.630646 #85374] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T19:52:17.631083 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:52:17.634741 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:52:17.634767 #85374] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:52:17.636308 #85374]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:17.636326 #85374] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T19:52:17.636813 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T19:52:17.640344 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T19:52:17.640370 #85374] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:52:17.641701 #85374]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:17.641721 #85374] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T19:52:18.061414 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T19:52:18.065145 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:52:18.065174 #85374] DEBUG -- : body :
I, [2023-06-18T19:52:18.067000 #85374]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:18.067027 #85374] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T19:52:18.067436 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T19:52:18.072830 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T19:52:18.072884 #85374] DEBUG -- : body :
I, [2023-06-18T19:52:18.074404 #85374]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:18.074429 #85374] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T19:52:18.075094 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:52:18.078798 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T19:52:18.078834 #85374] DEBUG -- : body :
I, [2023-06-18T19:52:18.080112 #85374]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:18.080133 #85374] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T19:52:18.080678 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:52:18.086500 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:52:18.086538 #85374] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:52:18.088024 #85374]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:18.088045 #85374] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T19:52:18.088579 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T19:52:18.092402 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T19:52:18.092427 #85374] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:52:18.094210 #85374]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:18.094250 #85374] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T19:52:18.095122 #85374]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T19:52:18.100657 #85374]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T19:52:18.100697 #85374] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T19:52:18.102721 #85374]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 16:52:17 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T19:52:18.102747 #85374] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:34:24.265949 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:34:24.270337 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:34:24.270364 #86749] DEBUG -- : body :
I, [2023-06-18T21:34:24.279118 #86749]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.279163 #86749] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:34:24.280506 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:34:24.284749 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:34:24.284768 #86749] DEBUG -- : body :
I, [2023-06-18T21:34:24.289191 #86749]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.289222 #86749] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:34:24.291172 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:34:24.294771 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:34:24.294788 #86749] DEBUG -- : body :
I, [2023-06-18T21:34:24.296201 #86749]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.296216 #86749] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:34:24.296660 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:34:24.300253 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:34:24.300282 #86749] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:34:24.301619 #86749]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.301634 #86749] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:34:24.302070 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:34:24.305497 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:34:24.305519 #86749] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:34:24.306741 #86749]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.306755 #86749] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:34:24.307186 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:34:24.310566 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:34:24.310588 #86749] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:34:24.312021 #86749]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.312035 #86749] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:34:24.726801 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:34:24.730778 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:34:24.730816 #86749] DEBUG -- : body :
I, [2023-06-18T21:34:24.732461 #86749]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.732501 #86749] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:34:24.732959 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:34:24.736785 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:34:24.736811 #86749] DEBUG -- : body :
I, [2023-06-18T21:34:24.738277 #86749]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.738296 #86749] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:34:24.738982 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:34:24.743449 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:34:24.743484 #86749] DEBUG -- : body :
I, [2023-06-18T21:34:24.745125 #86749]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.745168 #86749] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:34:24.746260 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:34:24.752974 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:34:24.753014 #86749] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:34:24.754709 #86749]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.754736 #86749] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:34:24.755384 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:34:24.759572 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:34:24.759601 #86749] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:34:24.761054 #86749]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.761071 #86749] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:34:24.761668 #86749]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:34:24.766104 #86749]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:34:24.766141 #86749] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:34:24.767657 #86749]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:34:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:34:24.767673 #86749] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:37:56.640329 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:37:56.644955 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:37:56.644986 #86977] DEBUG -- : body :
I, [2023-06-18T21:37:56.654211 #86977]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:56.654251 #86977] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:37:56.655414 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:37:56.659587 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:37:56.659605 #86977] DEBUG -- : body :
I, [2023-06-18T21:37:56.664187 #86977]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:56.664221 #86977] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:37:56.666033 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:37:56.669627 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:37:56.669644 #86977] DEBUG -- : body :
I, [2023-06-18T21:37:56.671161 #86977]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:56.671177 #86977] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:37:56.671644 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:37:56.675166 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:37:56.675188 #86977] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:37:56.676725 #86977]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:56.676740 #86977] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:37:56.677180 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:37:56.680588 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:37:56.680610 #86977] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:37:56.681877 #86977]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:56.681891 #86977] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:37:56.682314 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:37:56.685681 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:37:56.685707 #86977] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:37:56.687482 #86977]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:56.687502 #86977] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:37:57.105549 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:37:57.109134 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:37:57.109159 #86977] DEBUG -- : body :
I, [2023-06-18T21:37:57.110680 #86977]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:57.110699 #86977] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:37:57.111072 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:37:57.114457 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:37:57.114487 #86977] DEBUG -- : body :
I, [2023-06-18T21:37:57.115906 #86977]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:57.115927 #86977] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:37:57.116598 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:37:57.121493 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:37:57.121530 #86977] DEBUG -- : body :
I, [2023-06-18T21:37:57.123447 #86977]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:57.123486 #86977] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:37:57.124454 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:37:57.131445 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:37:57.131500 #86977] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:37:57.133933 #86977]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:57.133984 #86977] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:37:57.134670 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:37:57.138873 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:37:57.138926 #86977] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:37:57.140614 #86977]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:57.140642 #86977] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:37:57.141488 #86977]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:37:57.146491 #86977]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:37:57.146541 #86977] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:37:57.148423 #86977]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:37:56 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:37:57.148456 #86977] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:38:22.461533 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:38:22.465975 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:38:22.466003 #87037] DEBUG -- : body :
I, [2023-06-18T21:38:22.475055 #87037]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.475096 #87037] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:38:22.476239 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:38:22.480327 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:38:22.480349 #87037] DEBUG -- : body :
I, [2023-06-18T21:38:22.484924 #87037]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.484957 #87037] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:38:22.486719 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:38:22.490674 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:38:22.490693 #87037] DEBUG -- : body :
I, [2023-06-18T21:38:22.491913 #87037]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.491933 #87037] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:38:22.492401 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:38:22.495892 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:38:22.495916 #87037] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:38:22.497202 #87037]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.497219 #87037] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:38:22.497669 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:38:22.501035 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:38:22.501060 #87037] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:38:22.502445 #87037]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.502461 #87037] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:38:22.502897 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:38:22.506358 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:38:22.506380 #87037] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:38:22.507656 #87037]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.507676 #87037] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:38:22.916314 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:38:22.920050 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:38:22.920076 #87037] DEBUG -- : body :
I, [2023-06-18T21:38:22.922003 #87037]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.922023 #87037] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:38:22.922420 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:38:22.925838 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:38:22.925858 #87037] DEBUG -- : body :
I, [2023-06-18T21:38:22.927081 #87037]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"268", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.927098 #87037] DEBUG -- : body: {"id":"9566c74d-1003-4c4d-bbbb-0407d1e2c649","name":"Kailee Kling","code":"beatae","color":"Beige","created_at":"1945-12-02T05:47:50.00110341Z","updated_at":"1977-09-14T18:13:31.004088582Z","price":9452.83,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:38:22.927713 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:38:22.931103 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:38:22.931120 #87037] DEBUG -- : body :
I, [2023-06-18T21:38:22.932428 #87037]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.932464 #87037] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:38:22.933491 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:38:22.939952 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:38:22.939978 #87037] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:38:22.941791 #87037]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.941809 #87037] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:38:22.942286 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:38:22.949541 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:38:22.949568 #87037] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:38:22.951145 #87037]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.951172 #87037] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:38:22.951861 #87037]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:38:22.955965 #87037]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:38:22.955990 #87037] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:38:22.957732 #87037]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:38:22 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:38:22.957750 #87037] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:06.099111 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:39:06.103845 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:06.103873 #87135] DEBUG -- : body :
I, [2023-06-18T21:39:06.113796 #87135]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.113839 #87135] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:39:06.114952 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:39:06.119113 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:39:06.119133 #87135] DEBUG -- : body :
I, [2023-06-18T21:39:06.123327 #87135]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.123358 #87135] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:39:06.125140 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:06.128712 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:39:06.128735 #87135] DEBUG -- : body :
I, [2023-06-18T21:39:06.130003 #87135]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.130020 #87135] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:06.130487 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:06.133940 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:06.133966 #87135] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:06.135240 #87135]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.135255 #87135] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:06.135678 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:06.139074 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:06.139096 #87135] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:06.140346 #87135]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.140367 #87135] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:06.140813 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:39:06.144342 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:39:06.144363 #87135] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:06.145759 #87135]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.145778 #87135] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:06.559129 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:39:06.562986 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:06.563006 #87135] DEBUG -- : body :
I, [2023-06-18T21:39:06.564461 #87135]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.564477 #87135] DEBUG -- : body: {"id":"9566c74d-1003-4c4d-bbbb-0407d1e2c649","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-18T21:39:06.565102 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:39:06.570480 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:39:06.570548 #87135] DEBUG -- : body :
I, [2023-06-18T21:39:06.572445 #87135]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"264", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.572461 #87135] DEBUG -- : body: {"id":"6694d2c4-22ac-4208-a007-2939487f6999","name":"Brittany Hermann","code":"aut","color":"Lime","created_at":"1902-11-03T02:38:27.483565094Z","updated_at":"2013-04-01T20:03:33.280571137Z","price":9326.22,"image_url":"https://picsum.photos/100/200","type":"hat"}
I, [2023-06-18T21:39:06.573025 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:06.578284 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:39:06.578323 #87135] DEBUG -- : body :
I, [2023-06-18T21:39:06.580498 #87135]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.580537 #87135] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:06.581601 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:06.586548 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:06.586592 #87135] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:06.588429 #87135]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.588456 #87135] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:06.589101 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:06.593204 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:06.593232 #87135] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:06.594735 #87135]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.594761 #87135] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:06.595545 #87135]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:39:06.601303 #87135]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:39:06.601332 #87135] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:06.603016 #87135]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:06 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:06.603038 #87135] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:33.567259 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:39:33.572073 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:33.572113 #87195] DEBUG -- : body :
I, [2023-06-18T21:39:33.581876 #87195]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:33.581923 #87195] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:39:33.583140 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:39:33.587284 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:39:33.587304 #87195] DEBUG -- : body :
I, [2023-06-18T21:39:33.591674 #87195]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:33.591710 #87195] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:39:33.593495 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:33.597235 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:39:33.597255 #87195] DEBUG -- : body :
I, [2023-06-18T21:39:33.598580 #87195]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:33.598595 #87195] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:33.599089 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:33.602611 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:33.602638 #87195] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:33.603946 #87195]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:33.603961 #87195] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:33.604403 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:33.607762 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:33.607784 #87195] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:33.609220 #87195]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:33.609243 #87195] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:33.609730 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:39:33.613141 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:39:33.613174 #87195] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:33.614527 #87195]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:33.614545 #87195] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:34.027273 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:39:34.031066 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:34.031090 #87195] DEBUG -- : body :
I, [2023-06-18T21:39:34.032551 #87195]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:34.032571 #87195] DEBUG -- : body: {"id":"9566c74d-1003-4c4d-bbbb-0407d1e2c649","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-18T21:39:34.033189 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:39:34.036498 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:39:34.036515 #87195] DEBUG -- : body :
I, [2023-06-18T21:39:34.037810 #87195]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"264", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:34.037825 #87195] DEBUG -- : body: {"id":"6694d2c4-22ac-4208-a007-2939487f6999","name":"Brittany Hermann","code":"aut","color":"Lime","created_at":"1902-11-03T02:38:27.483565094Z","updated_at":"2013-04-01T20:03:33.280571137Z","price":9326.22,"image_url":"https://picsum.photos/100/200","type":"hat"}
I, [2023-06-18T21:39:34.038376 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:34.041694 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:39:34.041724 #87195] DEBUG -- : body :
I, [2023-06-18T21:39:34.043234 #87195]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:34.043267 #87195] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:34.043874 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:34.047544 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:34.047566 #87195] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:34.049683 #87195]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:34.049718 #87195] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:34.050609 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:39:34.055883 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:39:34.055923 #87195] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:34.057761 #87195]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:34.057783 #87195] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:39:34.058399 #87195]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:39:34.062872 #87195]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:39:34.062904 #87195] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:39:34.064558 #87195]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:39:33 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:39:34.064577 #87195] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:03.376874 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:42:03.381542 #87364]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:03.381574 #87364] DEBUG -- : body :
I, [2023-06-18T21:42:03.390835 #87364]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:03 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:03.390886 #87364] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:42:03.392105 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:42:03.581633 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has a matching body'
I, [2023-06-18T21:42:03.778509 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which includes headers "Content-Type" which equals "application/json"'
I, [2023-06-18T21:42:03.992333 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:04.004901 #87364]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:42:04.004999 #87364] DEBUG -- : body :
I, [2023-06-18T21:42:04.019855 #87364]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:03 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:04.019993 #87364] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:04.027813 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:04.036061 #87364]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:04.036156 #87364] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:04.039656 #87364]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:03 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:04.039795 #87364] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:04.041585 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:04.048871 #87364]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:04.048963 #87364] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:04.051864 #87364]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:03 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:04.051898 #87364] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:04.052861 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:42:04.058951 #87364]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:42:04.058993 #87364] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:04.061170 #87364]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:03 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:04.061226 #87364] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:04.507216 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:42:04.511005 #87364]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:04.511026 #87364] DEBUG -- : body :
I, [2023-06-18T21:42:04.512656 #87364]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:04 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:04.512683 #87364] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:42:04.513312 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:42:04.701564 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has a matching body'
I, [2023-06-18T21:42:04.912724 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which includes headers "Content-Type" which equals "application/json"'
I, [2023-06-18T21:42:05.124638 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:05.136558 #87364]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:42:05.136677 #87364] DEBUG -- : body :
I, [2023-06-18T21:42:05.139871 #87364]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:04 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:05.139919 #87364] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:05.141527 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:05.150192 #87364]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:05.150243 #87364] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:05.152777 #87364]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:04 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:05.152822 #87364] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:05.153957 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:05.161402 #87364]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:05.161441 #87364] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:05.163619 #87364]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:04 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:05.163665 #87364] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:05.164743 #87364]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:42:05.171395 #87364]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:42:05.171434 #87364] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:05.184640 #87364]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:04 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:05.184718 #87364] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:24.626966 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:42:24.631449 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:24.631480 #87418] DEBUG -- : body :
I, [2023-06-18T21:42:24.640518 #87418]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:24.640566 #87418] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:42:24.641771 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:42:24.646635 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:42:24.646655 #87418] DEBUG -- : body :
I, [2023-06-18T21:42:24.651246 #87418]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:24.651441 #87418] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:42:24.653254 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:24.656917 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:42:24.656936 #87418] DEBUG -- : body :
I, [2023-06-18T21:42:24.658158 #87418]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:24.658175 #87418] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:24.658709 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:24.662242 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:24.662272 #87418] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:24.663493 #87418]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:24.663509 #87418] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:24.663956 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:24.667438 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:24.667465 #87418] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:24.668871 #87418]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:24.668887 #87418] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:24.669329 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:42:24.672918 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:42:24.672945 #87418] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:24.674356 #87418]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:24.674372 #87418] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:25.168761 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:42:25.172879 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:25.172914 #87418] DEBUG -- : body :
I, [2023-06-18T21:42:25.174592 #87418]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:25.174623 #87418] DEBUG -- : body: {"id":"9566c74d-1003-4c4d-bbbb-0407d1e2c649","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-18T21:42:25.175350 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:42:25.179349 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:42:25.179398 #87418] DEBUG -- : body :
I, [2023-06-18T21:42:25.181205 #87418]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"264", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:25.181255 #87418] DEBUG -- : body: {"id":"6694d2c4-22ac-4208-a007-2939487f6999","name":"Brittany Hermann","code":"aut","color":"Lime","created_at":"1902-11-03T02:38:27.483565094Z","updated_at":"2013-04-01T20:03:33.280571137Z","price":9326.22,"image_url":"https://picsum.photos/100/200","type":"hat"}
I, [2023-06-18T21:42:25.182044 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:25.185800 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:42:25.185824 #87418] DEBUG -- : body :
I, [2023-06-18T21:42:25.187214 #87418]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:25.187235 #87418] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:25.187768 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:25.191454 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:25.191486 #87418] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:25.193568 #87418]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:25.193598 #87418] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:25.194215 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:42:25.198745 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:42:25.198788 #87418] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:25.200541 #87418]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:25.200576 #87418] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:42:25.201259 #87418]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:42:25.205710 #87418]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:42:25.205748 #87418] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:42:25.207387 #87418]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:42:24 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:42:25.207412 #87418] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:44:43.656348 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:44:43.661089 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:44:43.661118 #87580] DEBUG -- : body :
I, [2023-06-18T21:44:43.669934 #87580]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:43.669979 #87580] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:44:43.671304 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:44:43.675669 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:44:43.675693 #87580] DEBUG -- : body :
I, [2023-06-18T21:44:43.680327 #87580]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:43.680359 #87580] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:44:43.682130 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:44:43.685763 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:44:43.685781 #87580] DEBUG -- : body :
I, [2023-06-18T21:44:43.687243 #87580]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:43.687260 #87580] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:44:43.687714 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:44:43.691260 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:44:43.691282 #87580] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:44:43.692604 #87580]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:43.692619 #87580] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:44:43.693051 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:44:43.696552 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:44:43.696581 #87580] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:44:43.697863 #87580]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:43.697880 #87580] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:44:43.698359 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:44:43.701816 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:44:43.701842 #87580] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:44:43.703747 #87580]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:43.703764 #87580] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:44:44.109076 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:44:44.112787 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:44:44.112812 #87580] DEBUG -- : body :
I, [2023-06-18T21:44:44.114379 #87580]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:44.114401 #87580] DEBUG -- : body: {"id":"9566c74d-1003-4c4d-bbbb-0407d1e2c649","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-18T21:44:44.114976 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:44:44.118417 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:44:44.118438 #87580] DEBUG -- : body :
I, [2023-06-18T21:44:44.119634 #87580]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"264", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:44.119655 #87580] DEBUG -- : body: {"id":"6694d2c4-22ac-4208-a007-2939487f6999","name":"Brittany Hermann","code":"aut","color":"Lime","created_at":"1902-11-03T02:38:27.483565094Z","updated_at":"2013-04-01T20:03:33.280571137Z","price":9326.22,"image_url":"https://picsum.photos/100/200","type":"hat"}
I, [2023-06-18T21:44:44.120197 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:44:44.124739 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:44:44.124759 #87580] DEBUG -- : body :
I, [2023-06-18T21:44:44.126811 #87580]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:44.126849 #87580] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:44:44.127756 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:44:44.134296 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:44:44.134324 #87580] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:44:44.135665 #87580]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:44.135684 #87580] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:44:44.136174 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:44:44.141820 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:44:44.141847 #87580] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:44:44.143213 #87580]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:44.143234 #87580] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:44:44.143760 #87580]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:44:44.149164 #87580]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:44:44.149203 #87580] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:44:44.150895 #87580]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:44:43 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:44:44.150917 #87580] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:49:37.579969 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:49:37.584427 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:49:37.584465 #87978] DEBUG -- : body :
I, [2023-06-18T21:49:37.593969 #87978]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:37.594018 #87978] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:49:37.595238 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:49:37.599146 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:49:37.599173 #87978] DEBUG -- : body :
I, [2023-06-18T21:49:37.603504 #87978]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:37.603537 #87978] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:49:37.605458 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:49:37.609311 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:49:37.609345 #87978] DEBUG -- : body :
I, [2023-06-18T21:49:37.610605 #87978]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:37.610623 #87978] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:49:37.611198 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:49:37.614420 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:49:37.614441 #87978] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:49:37.615688 #87978]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:37.615703 #87978] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:49:37.616181 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:49:37.619674 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:49:37.619713 #87978] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:49:37.621392 #87978]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:37.621417 #87978] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:49:37.622063 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:49:37.625680 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:49:37.625708 #87978] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:49:37.627140 #87978]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:37.627166 #87978] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:49:38.045945 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:49:38.050099 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:49:38.050140 #87978] DEBUG -- : body :
I, [2023-06-18T21:49:38.051672 #87978]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:38.051691 #87978] DEBUG -- : body: {"id":"9566c74d-1003-4c4d-bbbb-0407d1e2c649","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-18T21:49:38.052360 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:49:38.056417 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:49:38.056442 #87978] DEBUG -- : body :
I, [2023-06-18T21:49:38.057783 #87978]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"264", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:38.057804 #87978] DEBUG -- : body: {"id":"6694d2c4-22ac-4208-a007-2939487f6999","name":"Brittany Hermann","code":"aut","color":"Lime","created_at":"1902-11-03T02:38:27.483565094Z","updated_at":"2013-04-01T20:03:33.280571137Z","price":9326.22,"image_url":"https://picsum.photos/100/200","type":"hat"}
I, [2023-06-18T21:49:38.058380 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:49:38.065531 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:49:38.065554 #87978] DEBUG -- : body :
I, [2023-06-18T21:49:38.067194 #87978]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:38.067228 #87978] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:49:38.068178 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:49:38.074129 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:49:38.074155 #87978] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:49:38.075809 #87978]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:38.075828 #87978] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:49:38.076370 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:49:38.081687 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:49:38.081729 #87978] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:49:38.083720 #87978]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:38.083747 #87978] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:49:38.084520 #87978]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:49:38.090233 #87978]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:49:38.090260 #87978] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:49:38.091864 #87978]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:49:37 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:49:38.091884 #87978] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:50:36.321559 #88073]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:50:36.325684 #88073]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:50:36.325708 #88073] DEBUG -- : body :
I, [2023-06-18T21:55:39.142687 #88368]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:55:39.147317 #88368]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:55:39.147352 #88368] DEBUG -- : body :
I, [2023-06-18T21:56:01.313994 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:56:01.318301 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:01.318329 #88426] DEBUG -- : body :
I, [2023-06-18T21:56:01.327720 #88426]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.327769 #88426] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:56:01.329122 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:56:01.333254 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:56:01.333277 #88426] DEBUG -- : body :
I, [2023-06-18T21:56:01.338004 #88426]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.338040 #88426] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:56:01.339847 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:01.343577 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:56:01.343598 #88426] DEBUG -- : body :
I, [2023-06-18T21:56:01.344800 #88426]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.344817 #88426] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:01.345298 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:01.348742 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:01.348766 #88426] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:01.350249 #88426]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.350266 #88426] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:01.350707 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:01.354181 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:01.354207 #88426] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:01.355592 #88426]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.355615 #88426] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:01.356057 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:56:01.359475 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:56:01.359498 #88426] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:01.360786 #88426]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.360807 #88426] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:01.771874 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:56:01.775552 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:01.775576 #88426] DEBUG -- : body :
I, [2023-06-18T21:56:01.777361 #88426]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.777383 #88426] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:56:01.777786 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:56:01.781551 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:56:01.781599 #88426] DEBUG -- : body :
I, [2023-06-18T21:56:01.783784 #88426]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.783826 #88426] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:56:01.785184 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:01.793057 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:56:01.793096 #88426] DEBUG -- : body :
I, [2023-06-18T21:56:01.794625 #88426]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.794645 #88426] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:01.795232 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:01.800141 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:01.800169 #88426] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:01.802072 #88426]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.802091 #88426] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:01.802694 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:01.806882 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:01.806907 #88426] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:01.808259 #88426]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.808287 #88426] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:01.809049 #88426]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:56:01.814559 #88426]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:56:01.814589 #88426] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:01.816048 #88426]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:01 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:01.816071 #88426] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:45.444665 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:56:45.449601 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:45.449634 #88505] DEBUG -- : body :
I, [2023-06-18T21:56:45.459167 #88505]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.459207 #88505] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:56:45.460393 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:56:45.464964 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:56:45.464984 #88505] DEBUG -- : body :
I, [2023-06-18T21:56:45.469357 #88505]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.469395 #88505] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T21:56:45.471215 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:45.475129 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:56:45.475162 #88505] DEBUG -- : body :
I, [2023-06-18T21:56:45.476404 #88505]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.476420 #88505] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:45.476919 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:45.480283 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:45.480303 #88505] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:45.481708 #88505]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.481727 #88505] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:45.482206 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:45.485603 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:45.485629 #88505] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:45.487178 #88505]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.487195 #88505] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:45.487660 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:56:45.491185 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:56:45.491206 #88505] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:45.492490 #88505]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.492505 #88505] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:45.950014 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T21:56:45.953833 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:45.953852 #88505] DEBUG -- : body :
I, [2023-06-18T21:56:45.955472 #88505]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.955488 #88505] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:56:45.955898 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T21:56:45.959568 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T21:56:45.959594 #88505] DEBUG -- : body :
I, [2023-06-18T21:56:45.960903 #88505]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.960924 #88505] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T21:56:45.961611 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:45.965153 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T21:56:45.965179 #88505] DEBUG -- : body :
I, [2023-06-18T21:56:45.966473 #88505]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.966496 #88505] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:45.967016 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:45.970466 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:45.970488 #88505] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:45.972061 #88505]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.972084 #88505] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:45.972750 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T21:56:45.977897 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T21:56:45.977936 #88505] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:45.979641 #88505]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.979664 #88505] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T21:56:45.980224 #88505]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T21:56:45.984496 #88505]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T21:56:45.984520 #88505] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T21:56:45.986001 #88505]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 18:56:45 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T21:56:45.986025 #88505] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:01:05.258374 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:01:05.262569 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:01:05.262593 #88784] DEBUG -- : body :
I, [2023-06-18T22:01:05.270538 #88784]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.270587 #88784] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:01:05.271313 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:01:05.274957 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:01:05.274978 #88784] DEBUG -- : body :
I, [2023-06-18T22:01:05.276620 #88784]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.276642 #88784] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T22:01:05.278435 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:01:05.282303 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T22:01:05.282327 #88784] DEBUG -- : body :
I, [2023-06-18T22:01:05.283700 #88784]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.283718 #88784] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:01:05.284219 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:01:05.287882 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:01:05.287907 #88784] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:01:05.289206 #88784]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.289221 #88784] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:01:05.289680 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:01:05.293174 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:01:05.293196 #88784] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:01:05.294708 #88784]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.294726 #88784] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:01:05.295191 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T22:01:05.298607 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T22:01:05.298631 #88784] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:01:05.300028 #88784]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.300045 #88784] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:01:05.712293 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:01:05.716233 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:01:05.716257 #88784] DEBUG -- : body :
I, [2023-06-18T22:01:05.717923 #88784]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.717982 #88784] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:01:05.719015 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:01:05.725204 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:01:05.725222 #88784] DEBUG -- : body :
I, [2023-06-18T22:01:05.726686 #88784]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.726707 #88784] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:01:05.727380 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:01:05.732825 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T22:01:05.732863 #88784] DEBUG -- : body :
I, [2023-06-18T22:01:05.734543 #88784]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.734560 #88784] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:01:05.735066 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:01:05.739564 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:01:05.739592 #88784] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:01:05.741034 #88784]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.741056 #88784] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:01:05.741946 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:01:05.748226 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:01:05.748263 #88784] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:01:05.749940 #88784]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.749959 #88784] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:01:05.750549 #88784]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T22:01:05.755605 #88784]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T22:01:05.755638 #88784] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:01:05.757365 #88784]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:01:05 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:01:05.757388 #88784] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:02:29.093762 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:02:29.097852 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:02:29.097875 #88889] DEBUG -- : body :
I, [2023-06-18T22:02:29.103021 #88889]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.103045 #88889] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:02:29.103660 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:02:29.107707 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:02:29.107725 #88889] DEBUG -- : body :
I, [2023-06-18T22:02:29.109371 #88889]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.109390 #88889] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T22:02:29.111260 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:02:29.115025 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T22:02:29.115043 #88889] DEBUG -- : body :
I, [2023-06-18T22:02:29.116450 #88889]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.116464 #88889] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:02:29.116929 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:02:29.120482 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:02:29.120509 #88889] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:02:29.121780 #88889]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.121797 #88889] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:02:29.122257 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:02:29.125843 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:02:29.125870 #88889] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:02:29.129019 #88889]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.129037 #88889] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:02:29.129535 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T22:02:29.133004 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T22:02:29.133026 #88889] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:02:29.137865 #88889]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.137897 #88889] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:02:29.547271 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:02:29.550996 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:02:29.551021 #88889] DEBUG -- : body :
I, [2023-06-18T22:02:29.552471 #88889]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.552489 #88889] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:02:29.552893 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:02:29.560528 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:02:29.560570 #88889] DEBUG -- : body :
I, [2023-06-18T22:02:29.562587 #88889]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.562615 #88889] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:02:29.563388 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:02:29.568911 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T22:02:29.568949 #88889] DEBUG -- : body :
I, [2023-06-18T22:02:29.574249 #88889]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.574280 #88889] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:02:29.574857 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:02:29.579934 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:02:29.579982 #88889] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:02:29.582081 #88889]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.582116 #88889] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:02:29.582931 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:02:29.588730 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:02:29.588760 #88889] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:02:29.590390 #88889]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.590409 #88889] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:02:29.590978 #88889]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T22:02:29.595734 #88889]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T22:02:29.595770 #88889] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:02:29.597567 #88889]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:02:29 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:02:29.597592 #88889] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:06:57.174849 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:06:57.179584 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:06:57.179620 #89174] DEBUG -- : body :
I, [2023-06-18T22:06:57.188822 #89174]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.188861 #89174] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:06:57.190162 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:06:57.194311 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:06:57.194338 #89174] DEBUG -- : body :
I, [2023-06-18T22:06:57.198925 #89174]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.198962 #89174] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T22:06:57.200750 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:06:57.204440 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T22:06:57.204465 #89174] DEBUG -- : body :
I, [2023-06-18T22:06:57.205673 #89174]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.205688 #89174] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:06:57.206204 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:06:57.209608 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:06:57.209629 #89174] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:06:57.211642 #89174]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.211676 #89174] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:06:57.212241 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:06:57.215741 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:06:57.215764 #89174] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:06:57.217191 #89174]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.217215 #89174] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:06:57.217766 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T22:06:57.221389 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T22:06:57.221419 #89174] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:06:57.222796 #89174]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.222811 #89174] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:06:57.637261 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:06:57.641371 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:06:57.641409 #89174] DEBUG -- : body :
I, [2023-06-18T22:06:57.643048 #89174]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.643081 #89174] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:06:57.643533 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:06:57.647621 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:06:57.647668 #89174] DEBUG -- : body :
I, [2023-06-18T22:06:57.649231 #89174]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.649274 #89174] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:06:57.650106 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get validation error when no product id is given A request for get products with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:06:57.656026 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get validation error when no product id is given"}]}, see debug logs for body
D, [2023-06-18T22:06:57.656096 #89174] DEBUG -- : body :
I, [2023-06-18T22:06:57.658275 #89174]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.658329 #89174] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:06:57.659490 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the one of product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:06:57.664147 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the one of product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:06:57.664233 #89174] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:06:57.666213 #89174]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.666250 #89174] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:06:57.666990 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for get products contains at least one not exist product id with GET /api/v1/products/bulk returns a response which has status code 400'
I, [2023-06-18T22:06:57.672467 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:06:57.672532 #89174] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:06:57.674462 #89174]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.674508 #89174] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:06:57.675245 #89174]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get products with given ids A request for get products with given ids with GET /api/v1/products/bulk returns a response which has status code 200'
I, [2023-06-18T22:06:57.679825 #89174]  INFO -- : Sending GET request to path: "/api/v1/products/bulk" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get products with given ids"}]}, see debug logs for body
D, [2023-06-18T22:06:57.679880 #89174] DEBUG -- : body :{"ids":["9566c74d-1003-4c4d-bbbb-0407d1e2c649","81855ad8-681d-4d86-91e9-1e00167939cb","6694d2c4-22ac-4208-a007-2939487f6999"]}
I, [2023-06-18T22:06:57.681786 #89174]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"56", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:06:57 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:06:57.681824 #89174] DEBUG -- : body: {"code":10001,"message":"could not parse request body."}
I, [2023-06-18T22:09:47.804708 #89543]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:09:47.809252 #89543]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:09:47.809289 #89543] DEBUG -- : body :
I, [2023-06-18T22:09:47.816609 #89543]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:09:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:09:47.816644 #89543] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:09:47.817694 #89543]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:09:47.822302 #89543]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:09:47.822335 #89543] DEBUG -- : body :
I, [2023-06-18T22:09:47.824268 #89543]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:09:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:09:47.824288 #89543] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T22:09:48.207478 #89543]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:09:48.211262 #89543]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:09:48.211284 #89543] DEBUG -- : body :
I, [2023-06-18T22:09:48.212836 #89543]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:09:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:09:48.212859 #89543] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:09:48.213258 #89543]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:09:48.216743 #89543]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:09:48.216766 #89543] DEBUG -- : body :
I, [2023-06-18T22:09:48.218032 #89543]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:09:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:09:48.218049 #89543] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-18T22:11:25.198241 #89719]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:11:25.202371 #89719]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:11:25.202392 #89719] DEBUG -- : body :
I, [2023-06-18T22:11:25.210241 #89719]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:11:25 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:11:25.210283 #89719] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:11:25.211418 #89719]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:11:25.216105 #89719]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:11:25.216128 #89719] DEBUG -- : body :
I, [2023-06-18T22:11:25.218046 #89719]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:11:25 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:11:25.218068 #89719] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T22:11:25.607813 #89719]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:11:25.612062 #89719]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:11:25.612103 #89719] DEBUG -- : body :
I, [2023-06-18T22:11:25.613666 #89719]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:11:25 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:11:25.613692 #89719] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:11:25.614139 #89719]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:11:25.617945 #89719]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:11:25.617998 #89719] DEBUG -- : body :
I, [2023-06-18T22:11:25.620039 #89719]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:11:25 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:11:25.620087 #89719] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-18T22:11:47.748244 #89770]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:11:47.752211 #89770]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:11:47.752239 #89770] DEBUG -- : body :
I, [2023-06-18T22:11:47.759284 #89770]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:11:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:11:47.759318 #89770] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:11:47.760613 #89770]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:11:47.764621 #89770]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:11:47.764642 #89770] DEBUG -- : body :
I, [2023-06-18T22:11:47.766946 #89770]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:11:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:11:47.766968 #89770] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T22:11:48.151387 #89770]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:11:48.155198 #89770]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:11:48.155223 #89770] DEBUG -- : body :
I, [2023-06-18T22:11:48.156756 #89770]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:11:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:11:48.156778 #89770] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:11:48.157189 #89770]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:11:48.160539 #89770]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:11:48.160560 #89770] DEBUG -- : body :
I, [2023-06-18T22:11:48.161816 #89770]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:11:47 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:11:48.161838 #89770] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-18T22:17:12.889964 #90145]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:17:12.894114 #90145]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:17:12.894139 #90145] DEBUG -- : body :
I, [2023-06-18T22:17:12.902992 #90145]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:17:12 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:17:12.903037 #90145] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:17:12.904657 #90145]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:17:12.909597 #90145]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:17:12.909623 #90145] DEBUG -- : body :
I, [2023-06-18T22:17:12.911413 #90145]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:17:12 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:17:12.911430 #90145] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T22:17:13.382775 #90145]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:17:13.386880 #90145]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:17:13.386912 #90145] DEBUG -- : body :
I, [2023-06-18T22:17:13.388514 #90145]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:17:12 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:17:13.388548 #90145] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:17:13.388971 #90145]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:17:13.392745 #90145]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:17:13.392776 #90145] DEBUG -- : body :
I, [2023-06-18T22:17:13.394276 #90145]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:17:12 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:17:13.394313 #90145] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-18T22:20:40.235343 #90622]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:20:40.239522 #90622]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:20:40.239543 #90622] DEBUG -- : body :
I, [2023-06-18T22:20:40.244788 #90622]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:20:40 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:20:40.244819 #90622] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:20:40.245462 #90622]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:20:40.249139 #90622]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:20:40.249156 #90622] DEBUG -- : body :
I, [2023-06-18T22:20:40.250400 #90622]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:20:40 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:20:40.250421 #90622] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T22:20:40.646942 #90622]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:20:40.650952 #90622]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:20:40.650994 #90622] DEBUG -- : body :
I, [2023-06-18T22:20:40.652573 #90622]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:20:40 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:20:40.652598 #90622] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:20:40.653058 #90622]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:20:40.656635 #90622]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:20:40.656655 #90622] DEBUG -- : body :
I, [2023-06-18T22:20:40.657934 #90622]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:20:40 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:20:40.657955 #90622] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-18T22:21:04.477268 #90684]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:21:04.481295 #90684]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:21:04.481322 #90684] DEBUG -- : body :
I, [2023-06-18T22:21:04.489787 #90684]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:21:04 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:21:04.489832 #90684] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:21:04.491425 #90684]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:21:04.496104 #90684]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:21:04.496130 #90684] DEBUG -- : body :
I, [2023-06-18T22:21:04.498595 #90684]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:21:04 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:21:04.498620 #90684] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-18T22:21:04.890712 #90684]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-18T22:21:04.894521 #90684]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-18T22:21:04.894548 #90684] DEBUG -- : body :
I, [2023-06-18T22:21:04.896079 #90684]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:21:04 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:21:04.896097 #90684] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-18T22:21:04.896492 #90684]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-18T22:21:04.899801 #90684]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-18T22:21:04.899824 #90684] DEBUG -- : body :
I, [2023-06-18T22:21:04.901137 #90684]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Sun, 18 Jun 2023 19:21:04 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-18T22:21:04.901157 #90684] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-19T17:01:26.273516 #27122]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-19T17:01:26.277595 #27122]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-19T17:01:26.277621 #27122] DEBUG -- : body :
I, [2023-06-19T17:01:26.283577 #27122]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Mon, 19 Jun 2023 14:01:26 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-19T17:01:26.283611 #27122] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-19T17:01:26.284541 #27122]  INFO -- : Running example 'Verifying a pact between BasketService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-19T17:01:26.289581 #27122]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-19T17:01:26.289600 #27122] DEBUG -- : body :
I, [2023-06-19T17:01:26.290962 #27122]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"274", "Content-Type"=>"application/json", "Date"=>"Mon, 19 Jun 2023 14:01:26 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-19T17:01:26.290979 #27122] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Bart Beatty","code":"sed","color":"MediumSeaGreen","created_at":"1905-06-30T20:16:00.106410694Z","updated_at":"1990-12-01T16:14:51.629431445Z","price":4920.59,"image_url":"https://picsum.photos/100/200","type":"clothing"}
I, [2023-06-19T17:01:26.689929 #27122]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-19T17:01:26.694377 #27122]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-19T17:01:26.694421 #27122] DEBUG -- : body :
I, [2023-06-19T17:01:26.696394 #27122]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Mon, 19 Jun 2023 14:01:26 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-19T17:01:26.696451 #27122] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-19T17:01:26.697045 #27122]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-19T17:01:26.701150 #27122]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-19T17:01:26.701180 #27122] DEBUG -- : body :
I, [2023-06-19T17:01:26.702612 #27122]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"276", "Content-Type"=>"application/json", "Date"=>"Mon, 19 Jun 2023 14:01:26 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-19T17:01:26.702628 #27122] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Victoria Green","code":"laboriosam","color":"SpringGreen","created_at":"1905-05-06T18:13:10.168565194Z","updated_at":"2023-05-21T22:04:19.776971353Z","price":5431.22,"image_url":"https://picsum.photos/100/200","type":"bag"}
I, [2023-06-19T17:01:27.089343 #27122]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product not found error when the product with given id does not exists A request for product with a non exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 400'
I, [2023-06-19T17:01:27.093090 #27122]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product not found error when the product with given id does not exists"}]}, see debug logs for body
D, [2023-06-19T17:01:27.093112 #27122] DEBUG -- : body :
I, [2023-06-19T17:01:27.094523 #27122]  INFO -- : Received response with status: 400, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"45", "Content-Type"=>"application/json", "Date"=>"Mon, 19 Jun 2023 14:01:26 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-19T17:01:27.094539 #27122] DEBUG -- : body: {"code":20001,"message":"Product not found."}
I, [2023-06-19T17:01:27.094920 #27122]  INFO -- : Running example 'Verifying a pact between StockService and ProductService Given i get product with given id A request for product with a exist product id with GET /api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72 returns a response which has status code 200'
I, [2023-06-19T17:01:27.098254 #27122]  INFO -- : Sending GET request to path: "/api/v1/products/52fdfc07-2182-454f-963f-5f0f9a621d72" with headers: {"X_PACT_PROVIDER_STATES"=>[{"name"=>"i get product with given id"}]}, see debug logs for body
D, [2023-06-19T17:01:27.098271 #27122] DEBUG -- : body :
I, [2023-06-19T17:01:27.100134 #27122]  INFO -- : Received response with status: 200, headers: {"Access-Control-Allow-Origin"=>"*", "Content-Length"=>"264", "Content-Type"=>"application/json", "Date"=>"Mon, 19 Jun 2023 14:01:26 GMT", "Vary"=>"Origin"}, see debug logs for body
D, [2023-06-19T17:01:27.100155 #27122] DEBUG -- : body: {"id":"52fdfc07-2182-454f-963f-5f0f9a621d72","name":"Brittany Hermann","code":"aut","color":"Lime","created_at":"1902-11-03T02:38:27.483565094Z","updated_at":"2013-04-01T20:03:33.280571137Z","price":9326.22,"image_url":"https://picsum.photos/100/200","type":"hat"}
